#!/bin/bash -l

#Run the job from the current working directory
#$ -cwd

#SBATCH -p work

#Your commands go after this line

# JOB_NAME is name of this particular particle in this particular generation to be simulated
# your idl code should break apart the name (something like test-4-7) and then know to look
# back for files generated by generation 3 (since this is generation 4)

source ~/.bashrc
source configuration_0809twoweek.sh

module load envi

gen_prev=$(expr $generation - 1)
generation_str=$(printf "%03d\n" $generation)
generation_str_prev=$(printf "%03d\n" $gen_prev)
if [ $generation -eq 0 ]; then generation_str_prev="000"; fi

particle_str=$(printf "%02d\n" $particle)
if [ $particle -eq 0 ]; then particle_str="00"; fi

job=$name-$generation-$particle
file_that_should_exist="${dataPath}generation${generation_str_prev}/particle${particle_str}/generation-${generation_str_prev}particle-${particle_str}.dat"
echo "file that should exist $file_that_should_exist"
echo "ready to start generation $generation and particle $particle"

if [ $generation -eq 0 ]; then
pushd /home/mva7609/may_casterline/PSO_Cluster_SLURM/
idl <<EOF
.compile pso_cluster_final_truth
resolve_all
print, '${generation}'
value = pso_cluster_final_truth('${job}', '${num_particles_per_gen}', '${num_parameters}', '${num_generations}','${ub}','${lb}', '${vmax}', '${alge_constant_path}', '${dataPath}', ${generation}, ${particle}, ${ratio_flag}, ${metric_flag}, ${season}, ${weather_variable}, ${minflag} )
print, value
EOF
popd
	echo -------
	exit
fi


tries=0
while [ $tries -lt 10 ]; do
	if [ -f $file_that_should_exist ]; then
	echo "On try number $tries"
	echo "file that should exist $file_that_should_exist"	
	tries=$(expr $tries + 1)
	pushd /home/mva7609/may_casterline/PSO_Cluster_SLURM/
idl <<EOF
.compile pso_cluster_final_truth
resolve_all
print, '${generation}'
value = pso_cluster_final_truth('${job}', '${num_particles_per_gen}', '${num_parameters}', '${num_generations}','${ub}','${lb}', '${vmax}', '${alge_constant_path}', '${dataPath}', ${generation}, ${particle}, ${ratio_flag}, ${metric_flag}, ${season}, ${weather_variable}, ${minflag} )
print, value
EOF
	popd

	echo -------
	exit
	fi
done
